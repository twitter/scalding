// following were autogenerated by ./codegen/mappable_generator.rb at 2013-09-19 16:40:36 -0700 do not edit
package com.twitter.scalding

trait Mappable1[A] extends Mappable[Tuple1[A]] {
  def converter[Z >: Tuple1[A]] = TupleConverter.asSuperConverter(TupleConverter.of[Tuple1[A]])
}

trait Mappable2[A, B] extends Mappable[Tuple2[A, B]] {
  def converter[Z >: Tuple2[A, B]] = TupleConverter.asSuperConverter(TupleConverter.of[Tuple2[A, B]])
}

trait Mappable3[A, B, C] extends Mappable[Tuple3[A, B, C]] {
  def converter[Z >: Tuple3[A, B, C]] = TupleConverter.asSuperConverter(TupleConverter.of[Tuple3[A, B, C]])
}

trait Mappable4[A, B, C, D] extends Mappable[Tuple4[A, B, C, D]] {
  def converter[Z >: Tuple4[A, B, C, D]] = TupleConverter.asSuperConverter(TupleConverter.of[Tuple4[A, B, C, D]])
}

trait Mappable5[A, B, C, D, E] extends Mappable[Tuple5[A, B, C, D, E]] {
  def converter[Z >: Tuple5[A, B, C, D, E]] = TupleConverter.asSuperConverter(TupleConverter.of[Tuple5[A, B, C, D, E]])
}

trait Mappable6[A, B, C, D, E, F] extends Mappable[Tuple6[A, B, C, D, E, F]] {
  def converter[Z >: Tuple6[A, B, C, D, E, F]] = TupleConverter.asSuperConverter(TupleConverter.of[Tuple6[A, B, C, D, E, F]])
}

trait Mappable7[A, B, C, D, E, F, G] extends Mappable[Tuple7[A, B, C, D, E, F, G]] {
  def converter[Z >: Tuple7[A, B, C, D, E, F, G]] = TupleConverter.asSuperConverter(TupleConverter.of[Tuple7[A, B, C, D, E, F, G]])
}

trait Mappable8[A, B, C, D, E, F, G, H] extends Mappable[Tuple8[A, B, C, D, E, F, G, H]] {
  def converter[Z >: Tuple8[A, B, C, D, E, F, G, H]] = TupleConverter.asSuperConverter(TupleConverter.of[Tuple8[A, B, C, D, E, F, G, H]])
}

trait Mappable9[A, B, C, D, E, F, G, H, I] extends Mappable[Tuple9[A, B, C, D, E, F, G, H, I]] {
  def converter[Z >: Tuple9[A, B, C, D, E, F, G, H, I]] = TupleConverter.asSuperConverter(TupleConverter.of[Tuple9[A, B, C, D, E, F, G, H, I]])
}

trait Mappable10[A, B, C, D, E, F, G, H, I, J] extends Mappable[Tuple10[A, B, C, D, E, F, G, H, I, J]] {
  def converter[Z >: Tuple10[A, B, C, D, E, F, G, H, I, J]] = TupleConverter.asSuperConverter(TupleConverter.of[Tuple10[A, B, C, D, E, F, G, H, I, J]])
}

trait Mappable11[A, B, C, D, E, F, G, H, I, J, K] extends Mappable[Tuple11[A, B, C, D, E, F, G, H, I, J, K]] {
  def converter[Z >: Tuple11[A, B, C, D, E, F, G, H, I, J, K]] = TupleConverter.asSuperConverter(TupleConverter.of[Tuple11[A, B, C, D, E, F, G, H, I, J, K]])
}

trait Mappable12[A, B, C, D, E, F, G, H, I, J, K, L] extends Mappable[Tuple12[A, B, C, D, E, F, G, H, I, J, K, L]] {
  def converter[Z >: Tuple12[A, B, C, D, E, F, G, H, I, J, K, L]] = TupleConverter.asSuperConverter(TupleConverter.of[Tuple12[A, B, C, D, E, F, G, H, I, J, K, L]])
}

trait Mappable13[A, B, C, D, E, F, G, H, I, J, K, L, M] extends Mappable[Tuple13[A, B, C, D, E, F, G, H, I, J, K, L, M]] {
  def converter[Z >: Tuple13[A, B, C, D, E, F, G, H, I, J, K, L, M]] = TupleConverter.asSuperConverter(TupleConverter.of[Tuple13[A, B, C, D, E, F, G, H, I, J, K, L, M]])
}

trait Mappable14[A, B, C, D, E, F, G, H, I, J, K, L, M, N] extends Mappable[Tuple14[A, B, C, D, E, F, G, H, I, J, K, L, M, N]] {
  def converter[Z >: Tuple14[A, B, C, D, E, F, G, H, I, J, K, L, M, N]] = TupleConverter.asSuperConverter(TupleConverter.of[Tuple14[A, B, C, D, E, F, G, H, I, J, K, L, M, N]])
}

trait Mappable15[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O] extends Mappable[Tuple15[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]] {
  def converter[Z >: Tuple15[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]] = TupleConverter.asSuperConverter(TupleConverter.of[Tuple15[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]])
}

trait Mappable16[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P] extends Mappable[Tuple16[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]] {
  def converter[Z >: Tuple16[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]] = TupleConverter.asSuperConverter(TupleConverter.of[Tuple16[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]])
}

trait Mappable17[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q] extends Mappable[Tuple17[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]] {
  def converter[Z >: Tuple17[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]] = TupleConverter.asSuperConverter(TupleConverter.of[Tuple17[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]])
}

trait Mappable18[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R] extends Mappable[Tuple18[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R]] {
  def converter[Z >: Tuple18[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R]] = TupleConverter.asSuperConverter(TupleConverter.of[Tuple18[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R]])
}

trait Mappable19[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S] extends Mappable[Tuple19[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S]] {
  def converter[Z >: Tuple19[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S]] = TupleConverter.asSuperConverter(TupleConverter.of[Tuple19[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S]])
}

trait Mappable20[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T] extends Mappable[Tuple20[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T]] {
  def converter[Z >: Tuple20[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T]] = TupleConverter.asSuperConverter(TupleConverter.of[Tuple20[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T]])
}

trait Mappable21[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U] extends Mappable[Tuple21[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U]] {
  def converter[Z >: Tuple21[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U]] = TupleConverter.asSuperConverter(TupleConverter.of[Tuple21[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U]])
}

trait Mappable22[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V] extends Mappable[Tuple22[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V]] {
  def converter[Z >: Tuple22[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V]] = TupleConverter.asSuperConverter(TupleConverter.of[Tuple22[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V]])
}

// end of autogenerated
